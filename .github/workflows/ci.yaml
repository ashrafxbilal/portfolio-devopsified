name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Check if test script exists
        id: check_tests
        run: |
          if grep -q '"test":' package.json; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Run tests
        if: steps.check_tests.outputs.has_tests == 'true'
        run: npm test
      
      - name: Skip tests
        if: steps.check_tests.outputs.has_tests == 'false'
        run: echo "No test script found in package.json, skipping tests"

  code-quality:
    name: Code Quality
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        
      - name: Check formatting
        run: npm run format:check

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio-devopsified:${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-helm-chart:
    name: Update Helm Chart
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          
      - name: Update image tag in Helm values
        run: |
          sed -i "s/tag: .*/tag: ${{ github.run_id }}/" ./helm/portfolio-devopsified-chart/values.yaml
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'Bilal Ashraf'
          git config --global user.email 'beingbilalashraf@gmail.com'
          git add ./helm/portfolio-devopsified-chart/values.yaml
          git commit -m "Update Helm chart with new image tag: ${{ github.run_id }}"
          git push